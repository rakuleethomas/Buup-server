org: mingyun
app: bu-up
service: bu-up-sls

frameworkVersion: '2'

plugins:
  - serverless-dynamodb-local
  - serverless-offline

custom:
  post: 'post-${self:provider.stage}'
  jobSeeker: 'jobseeker-${self:provider.stage}'
  employer: 'employer-${self:provider.stage}'

provider:
  name: aws
  runtime: nodejs12.x
  lambdaHashingVersion: '20201221'
  stage: dev-3
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource:
            - Fn::GetAtt: [ JobSeekerTable, Arn ]
            - Fn::GetAtt: [ EmployerTable, Arn ]
            - Fn::GetAtt: [ PostTable, Arn ]
  environment:
    POST_TABLE: ${self:custom.post}
    JOBSEEKER_TABLE: ${self:custom.jobSeeker}
    EMPLOYER_TABLE: ${self:custom.employer}

functions:
  api:
    handler: lambdas/handler.handler
    events:
      - http:
          path: /
          method: ANY
      - http:
          path: /{proxy+}
          method: ANY

resources:
  Resources:
    JobSeekerTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: jobseekerId
            AttributeType: S
        KeySchema:
          - AttributeName: jobseekerId
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:custom.jobSeeker}
    EmployerTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: employerId
            AttributeType: S
        KeySchema:
          - AttributeName: employerId
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:custom.employer}
    PostTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: postId
            AttributeType: S
        KeySchema:
          - AttributeName: postId
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:custom.post}